domain seq_abstraction[T] {
  function seq_to_ms(s: Seq[T]): Multiset[T]

  axiom same_size {
    forall s: Seq[T] :: { |seq_to_ms(s)| } |s| == |seq_to_ms(s)|
  }

  axiom constr_empty {
    seq_to_ms(Seq[T]()) == Multiset[T]()
  }

  axiom constr_concat {
    forall s1: Seq[T], s2: Seq[T] :: { seq_to_ms(s1 ++ s2) } seq_to_ms(s1 ++ s2) == seq_to_ms(s1) union seq_to_ms(s2)
  }

  axiom constr_single {
    forall v: T :: { seq_to_ms(Seq(v)) } seq_to_ms(Seq(v)) == Multiset(v)
  }
}