domain Nat {
  function nat(i: Int): Nat
  function nat_val(n: Nat): Int

  axiom nat_val_and_equality {
    (forall i: Int :: { nat(i) } nat_val(nat(i)) == (i > 0 ? i : -i))
    &&
    (forall i: Int :: { nat(i) } nat(i) == nat(-i))
    &&
    (forall n: Nat :: { nat_val(n) } nat(nat_val(n)) == n)
    &&
    (forall n: Nat :: { nat_val(n) } nat_val(n) >= 0 )
  }
}